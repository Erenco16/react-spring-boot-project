{"ast":null,"code":"var _jsxFileName = \"/Users/godfather/Desktop/TUS School Stuff/spotify_web_api_project/frontend/src/components/InitialPage.tsx\";\nimport React from \"react\";\nimport express from \"express\";\nimport querystring from \"querystring\";\nimport crypto from \"crypto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InitialPage = () => {\n  const handleSpotifyLogin = () => {\n    // Environment variables for Spotify API credentials\n    const client_id = process.env.SPOTIFY_CLIENT_ID;\n    const redirect_uri = process.env.SPOTIFY_REDIRECT_URI || \"http://localhost:8888/callback\";\n    const stateKey = \"spotify_auth_state\";\n    const app = express();\n    app.get(\"/login\", (req, res) => {\n      const state = generateRandomString(16);\n      const scope = \"user-read-private user-read-email\";\n\n      // Set state in cookies to match it with the callback\n      res.cookie(stateKey, state);\n\n      // Redirect user to Spotify's authorization page\n      res.redirect(\"https://accounts.spotify.com/authorize?\" + querystring.stringify({\n        response_type: \"code\",\n        client_id: client_id,\n        scope: scope,\n        redirect_uri: redirect_uri,\n        state: state\n      }));\n    });\n    function generateRandomString(length) {\n      return crypto.randomBytes(length).toString(\"hex\").slice(0, length);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Display your playlists!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"In order to see your playlists, you need to click the button below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"spotify-btn\",\n      children: \"Log in with spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = InitialPage;\nexport default InitialPage;\nvar _c;\n$RefreshReg$(_c, \"InitialPage\");","map":{"version":3,"names":["React","express","querystring","crypto","jsxDEV","_jsxDEV","InitialPage","handleSpotifyLogin","client_id","process","env","SPOTIFY_CLIENT_ID","redirect_uri","SPOTIFY_REDIRECT_URI","stateKey","app","get","req","res","state","generateRandomString","scope","cookie","redirect","stringify","response_type","length","randomBytes","toString","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/godfather/Desktop/TUS School Stuff/spotify_web_api_project/frontend/src/components/InitialPage.tsx"],"sourcesContent":["import React from \"react\";\n\nimport express, { Request, Response } from \"express\";\nimport querystring from \"querystring\";\nimport crypto from \"crypto\";\n\nconst InitialPage = () => {\n  const handleSpotifyLogin = () => {\n    // Environment variables for Spotify API credentials\n    const client_id: string = process.env.SPOTIFY_CLIENT_ID as string;\n    const redirect_uri: string =\n      process.env.SPOTIFY_REDIRECT_URI || \"http://localhost:8888/callback\";\n    const stateKey: string = \"spotify_auth_state\";\n\n    const app = express();\n\n    app.get(\"/login\", (req: Request, res: Response) => {\n      const state: string = generateRandomString(16);\n      const scope: string = \"user-read-private user-read-email\";\n\n      // Set state in cookies to match it with the callback\n      res.cookie(stateKey, state);\n\n      // Redirect user to Spotify's authorization page\n      res.redirect(\n        \"https://accounts.spotify.com/authorize?\" +\n          querystring.stringify({\n            response_type: \"code\",\n            client_id: client_id,\n            scope: scope,\n            redirect_uri: redirect_uri,\n            state: state,\n          })\n      );\n    });\n\n    function generateRandomString(length: number): string {\n      return crypto.randomBytes(length).toString(\"hex\").slice(0, length);\n    }\n  };\n\n  return (\n    <div className=\"main-container\">\n      <h1>Display your playlists!</h1>\n      <h2>\n        In order to see your playlists, you need to click the button below.\n      </h2>\n      <button className=\"spotify-btn\">Log in with spotify</button>\n    </div>\n  );\n};\n\nexport default InitialPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,OAAO,MAA6B,SAAS;AACpD,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACA,MAAMC,SAAiB,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAA2B;IACjE,MAAMC,YAAoB,GACxBH,OAAO,CAACC,GAAG,CAACG,oBAAoB,IAAI,gCAAgC;IACtE,MAAMC,QAAgB,GAAG,oBAAoB;IAE7C,MAAMC,GAAG,GAAGd,OAAO,CAAC,CAAC;IAErBc,GAAG,CAACC,GAAG,CAAC,QAAQ,EAAE,CAACC,GAAY,EAAEC,GAAa,KAAK;MACjD,MAAMC,KAAa,GAAGC,oBAAoB,CAAC,EAAE,CAAC;MAC9C,MAAMC,KAAa,GAAG,mCAAmC;;MAEzD;MACAH,GAAG,CAACI,MAAM,CAACR,QAAQ,EAAEK,KAAK,CAAC;;MAE3B;MACAD,GAAG,CAACK,QAAQ,CACV,yCAAyC,GACvCrB,WAAW,CAACsB,SAAS,CAAC;QACpBC,aAAa,EAAE,MAAM;QACrBjB,SAAS,EAAEA,SAAS;QACpBa,KAAK,EAAEA,KAAK;QACZT,YAAY,EAAEA,YAAY;QAC1BO,KAAK,EAAEA;MACT,CAAC,CACL,CAAC;IACH,CAAC,CAAC;IAEF,SAASC,oBAAoBA,CAACM,MAAc,EAAU;MACpD,OAAOvB,MAAM,CAACwB,WAAW,CAACD,MAAM,CAAC,CAACE,QAAQ,CAAC,KAAK,CAAC,CAACC,KAAK,CAAC,CAAC,EAAEH,MAAM,CAAC;IACpE;EACF,CAAC;EAED,oBACErB,OAAA;IAAKyB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B1B,OAAA;MAAA0B,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC9B,OAAA;MAAA0B,QAAA,EAAI;IAEJ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACL9B,OAAA;MAAQyB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV,CAAC;AAACC,EAAA,GA5CI9B,WAAW;AA8CjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}