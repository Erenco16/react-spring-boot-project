{"ast":null,"code":"var _jsxFileName = \"/Users/godfather/Desktop/TUS School Stuff/spotify_web_api_project/frontend/src/components/InitialPage.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InitialPage = () => {\n  const handleSpotifyLogin = () => {\n    // Environment variables for Spotify API credentials\n    const client_id = process.env.REACT_APP_SPOTIFY_CLIENT_ID;\n    const redirect_uri = process.env.REACT_APP_SPOTIFY_REDIRECT_URI;\n    const stateKey = \"spotify_auth_state\";\n    const state = generateRandomString(16);\n    const scope = \"user-read-private user-read-email\";\n    sessionStorage.setItem(stateKey, state);\n    const authUrl = `https://accounts.spotify.com/authorize?${new URLSearchParams({\n      response_type: \"code\",\n      client_id,\n      scope,\n      redirect_uri,\n      state\n    }).toString()}`;\n    window.location.href = authUrl; // Redirect to Spotify login\n  };\n  const generateRandomString = length => {\n    let text = \"\";\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  };\n  console.log(process.env.REACT_APP_SPOTIFY_REDIRECT_URI);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Display your playlists!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"In order to see your playlists, you need to click the button below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"spotify-btn\",\n      onClick: handleSpotifyLogin,\n      children: \"Log in with Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = InitialPage;\nexport default InitialPage;\nvar _c;\n$RefreshReg$(_c, \"InitialPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","InitialPage","handleSpotifyLogin","client_id","process","env","REACT_APP_SPOTIFY_CLIENT_ID","redirect_uri","REACT_APP_SPOTIFY_REDIRECT_URI","stateKey","state","generateRandomString","scope","sessionStorage","setItem","authUrl","URLSearchParams","response_type","toString","window","location","href","length","text","possible","i","charAt","Math","floor","random","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/godfather/Desktop/TUS School Stuff/spotify_web_api_project/frontend/src/components/InitialPage.tsx"],"sourcesContent":["import React from \"react\";\n\nconst InitialPage: React.FC = () => {\n  const handleSpotifyLogin = () => {\n    // Environment variables for Spotify API credentials\n    const client_id: string = process.env.REACT_APP_SPOTIFY_CLIENT_ID as string;\n    const redirect_uri: string = process.env\n      .REACT_APP_SPOTIFY_REDIRECT_URI as string;\n    const stateKey: string = \"spotify_auth_state\";\n    const state: string = generateRandomString(16);\n    const scope: string = \"user-read-private user-read-email\";\n\n    sessionStorage.setItem(stateKey, state);\n\n    const authUrl = `https://accounts.spotify.com/authorize?${new URLSearchParams(\n      {\n        response_type: \"code\",\n        client_id,\n        scope,\n        redirect_uri,\n        state,\n      }\n    ).toString()}`;\n\n    window.location.href = authUrl; // Redirect to Spotify login\n  };\n\n  const generateRandomString = (length: number): string => {\n    let text = \"\";\n    const possible =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  };\n  console.log(process.env.REACT_APP_SPOTIFY_REDIRECT_URI);\n  return (\n    <div className=\"main-container\">\n      <h1>Display your playlists!</h1>\n      <h2>\n        In order to see your playlists, you need to click the button below.\n      </h2>\n      <button className=\"spotify-btn\" onClick={handleSpotifyLogin}>\n        Log in with Spotify\n      </button>\n    </div>\n  );\n};\n\nexport default InitialPage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAClC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACA,MAAMC,SAAiB,GAAGC,OAAO,CAACC,GAAG,CAACC,2BAAqC;IAC3E,MAAMC,YAAoB,GAAGH,OAAO,CAACC,GAAG,CACrCG,8BAAwC;IAC3C,MAAMC,QAAgB,GAAG,oBAAoB;IAC7C,MAAMC,KAAa,GAAGC,oBAAoB,CAAC,EAAE,CAAC;IAC9C,MAAMC,KAAa,GAAG,mCAAmC;IAEzDC,cAAc,CAACC,OAAO,CAACL,QAAQ,EAAEC,KAAK,CAAC;IAEvC,MAAMK,OAAO,GAAG,0CAA0C,IAAIC,eAAe,CAC3E;MACEC,aAAa,EAAE,MAAM;MACrBd,SAAS;MACTS,KAAK;MACLL,YAAY;MACZG;IACF,CACF,CAAC,CAACQ,QAAQ,CAAC,CAAC,EAAE;IAEdC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGN,OAAO,CAAC,CAAC;EAClC,CAAC;EAED,MAAMJ,oBAAoB,GAAIW,MAAc,IAAa;IACvD,IAAIC,IAAI,GAAG,EAAE;IACb,MAAMC,QAAQ,GACZ,gEAAgE;IAClE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,EAAEG,CAAC,EAAE,EAAE;MAC/BF,IAAI,IAAIC,QAAQ,CAACE,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,QAAQ,CAACF,MAAM,CAAC,CAAC;IACtE;IACA,OAAOC,IAAI;EACb,CAAC;EACDO,OAAO,CAACC,GAAG,CAAC3B,OAAO,CAACC,GAAG,CAACG,8BAA8B,CAAC;EACvD,oBACER,OAAA;IAAKgC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjC,OAAA;MAAAiC,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCrC,OAAA;MAAAiC,QAAA,EAAI;IAEJ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLrC,OAAA;MAAQgC,SAAS,EAAC,aAAa;MAACM,OAAO,EAAEpC,kBAAmB;MAAA+B,QAAA,EAAC;IAE7D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACE,EAAA,GA9CItC,WAAqB;AAgD3B,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}